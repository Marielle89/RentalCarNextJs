version: '3.9'

services:
#  shared:
#    container_name: rental-shared
#    build:
#      context: .
#      dockerfile: Dockerfile.shared
#    volumes:
#      - ./shared:/app/shared

  server:
    container_name: rental-server-dev
    build:
      context: .
      dockerfile: Dockerfile.server
    ports:
      - "4000:4000"
    volumes:
      - ./server:/app/server
      - ./shared:/app/shared
      - /app/server/node_modules
    depends_on:
      mongo:
        condition: service_healthy

  client:
    container_name: rental-client-dev
    build:
      context: .
      dockerfile: Dockerfile.client
    ports:
      - "3001:3000"
    volumes:
      - ./client:/app/client
      - /app/client/node_modules
      - ./shared:/app/shared

  mongo:
    image: mongo:5.0
    container_name: rental-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: "echo 'db.runCommand({ ping: 1 })' | mongo --quiet mongodb://localhost:27017/go-rental"
      interval: 10s
      timeout: 10s
      retries: 5

  mongo-express:
    image: mongo-express:latest
    container_name: rental-mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: rental-mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password
    ports:
      - "8081:8081"
    depends_on:
      mongo:
        condition: service_healthy

volumes:
#  shared:
  mongo_data:
#  client_node_modules:
